name: Rule Converter

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'  # UTC时间16点=北京时间0点

jobs:
  convert:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    # ---------------------------
    # 步骤1：克隆仓库
    # ---------------------------
    - name: Clone Main Repo
      uses: actions/checkout@v4
      with:
        repository: J54264/rules
        path: main-repo
        sparse-checkout: "proxy/*.list"

    - name: Clone Adblock4limbo
      run: |
        git clone --depth 1 --filter=blob:none \
          --sparse https://github.com/limbopro/Adblock4limbo \
          --no-checkout
        cd Adblock4limbo
        git sparse-checkout init --cone
        git sparse-checkout set Adblock4limbo.list
        git checkout

    # ---------------------------
    # 步骤2：安装依赖工具
    # ---------------------------
    - name: Install Subconverter
      run: |
        # 下载最新subconverter
        SUB_URL=$(curl -s https://api.github.com/repos/tindy2013/subconverter/releases/latest | grep "browser_download_url.*linux64.tar.gz" | cut -d '"' -f 4)
        wget -q $SUB_URL -O subconverter.tar.gz
        tar -xzf subconverter.tar.gz
        ./subconverter/subconverter &

    - name: Install Mihomo
      run: |
        # 下载amd64架构的Mihomo
        MIHOMO_URL=$(curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | grep "browser_download_url.*mihomo-linux-amd64.*\.deb" | cut -d '"' -f 4)
        wget -q $MIHOMO_URL -O mihomo.deb
        sudo dpkg --force-all -i mihomo.deb || true

    # ---------------------------
    # 步骤3：准备规则文件
    # ---------------------------
    - name: Prepare Rules
      run: |
        mkdir -p ./workdir
        find ./main-repo/proxy -name "*.list" -exec cp {} ./workdir \;
        cp ./Adblock4limbo/Adblock4limbo.list ./workdir/
        cd workdir && nohup python3 -m http.server 8080 >/dev/null 2>&1 &

    # ---------------------------
    # 步骤4：执行转换脚本
    # ---------------------------
    - name: Run Conversion
      run: |
        chmod +x ./scripts/convert.sh
        ./scripts/convert.sh

    # ---------------------------
    # 步骤5：提交结果
    # ---------------------------
    - name: Commit Changes
      run: |
        git config --global user.name "AutoUpdater"
        git config --global user.email "auto@noreply.com"
        git clone https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/J54264/rules.git output-repo
        cp -r ./output/* output-repo/proxy/providers/
        cd output-repo
        git add .
        git commit -m "AutoUpdate: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        git push
